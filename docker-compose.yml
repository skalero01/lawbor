services:
  # --- PHP-FPM (web) ---
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        HOST_UID: ${UID:-1000}
        HOST_GID: ${GID:-1000}
    user: "${UID:-1000}:${GID:-1000}"
    env_file: .env
    volumes:
      - .:/var/www/html:cached
      - vendor_data:/var/www/html/vendor
      - node_modules_data:/var/www/html/node_modules
    depends_on: [db, redis, ollama]
    networks: [internal]

  # --- Worker Horizon ---
  worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        HOST_UID: ${UID:-1000}
        HOST_GID: ${GID:-1000}
    # Run as root to access Docker socket (temporary)
    user: "root"
    env_file: .env
    command: php artisan horizon
    volumes:
      - .:/var/www/html:cached
      - vendor_data:/var/www/html/vendor
      - node_modules_data:/var/www/html/node_modules
      - /var/run/docker.sock:/var/run/docker.sock # Mount Docker socket
    depends_on: [redis, ocrmypdf, ollama]
    networks: [internal]

  # --- OCRmyPDF "resident" ---
  ocrmypdf:
    image: jbarlow83/ocrmypdf:latest
    container_name: ocrmypdf
    entrypoint: ["sleep", "infinity"]
    volumes:
      - .:/data             # shared files
    networks: [internal]

  # --- Nginx ---
  web:
    image: nginx:1.26-alpine
    depends_on: [app]
    ports:
      - "${APP_PORT:-80}:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/var/www/html:cached
    networks: [internal]

  # --- Redis ---
  redis:
    image: redis:7.2
    networks: [internal]

  # --- PostgreSQL ---
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_DATABASE:-laravel}
      POSTGRES_USER: ${DB_USERNAME:-laravel}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    networks: [internal]

  # --- Ollama (local LLM) ---
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    # The image already has the correct command configured
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"  # Expose port to access from host if needed
    networks: [internal]
    command: >
      bash -c "ollama pull llama3 && ollama serve"

networks:
  internal: {}

volumes:
  pgdata:
  vendor_data:
  node_modules_data:
  ollama_data:
